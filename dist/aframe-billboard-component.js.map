{"version":3,"file":"aframe-billboard-component.js","sources":["../src/aframe-billboard-component.ts"],"sourcesContent":["  declare const AFRAME:any, THREE:any\n\n/**** (re)define a component for A-Frame ****/\n\n  delete AFRAME.components['billboard']\n\n  AFRAME.registerComponent('billboard', {\n    dependencies: ['camera'],\n    schema: {\n      'map':   { type:'map' },\n      'width': { type:'number' },\n      'height':{ type:'number' }\n    },\n\n  /**** init ****/\n\n    init: function ():void {\n      this.Texture  = undefined\n      this.Material = new THREE.MeshBasicMaterial({\n        transparent:true, alphaTest:0.5\n      })\n      this.Mesh  = new THREE.Mesh(new THREE.PlaneGeometry(1,1),this.Material)\n      this.Group = new THREE.Group()\n        this.Group.add(this.Mesh)\n      this.el.setObject3D('mesh',this.Group)\n\n      this.Origin = new THREE.Vector3()\n      this.Target = new THREE.Vector3()\n    }, // will invoke \"update\" next\n\n  /**** update ****/\n\n    update: function (oldData:any):void {\n      if (\n        (oldData == null) || (oldData.map == null) ||\n        (oldData.map !== this.data.map)\n      ) {\n        if (this.Texture != null) { this.Texture.dispose() }\n\n        let newMap = this.data.map\n        this.Texture = new THREE.TextureLoader().load(\n          newMap instanceof Image ? newMap.src : newMap,\n          (Texture:any) => {\n            this.Material.map         = Texture\n            this.Material.needsUpdate = true\n\n            updateSizeOf(this)\n          }\n        )\n      }\n\n      if (\n        (oldData == null) ||\n        (oldData.width  !== this.data.width) ||\n        (oldData.height !== this.data.height)\n      ) {\n        updateSizeOf(this)\n      }\n    },\n\n  /**** tick ****/\n\n    tick: function ():void {\n      let Camera = this.el.sceneEl.getObject3D('camera')\n      Camera.getWorldPosition(this.Target)\n\n      this.Group.getWorldPosition(this.Origin)\n      this.Target.setY(this.Origin.y)\n\n      this.Group.lookAt(this.Target)\n    },\n\n  /**** remove ****/\n\n    remove: function ():void {\n      if (this.Mesh     != null) { this.el.removeObject3D('mesh') }\n      if (this.Texture  != null) { this.Texture.dispose() }\n      if (this.Material != null) { this.Material.dispose() }\n    }\n  })\n\n/**** updateSizeOf ****/\n\n  function updateSizeOf (Billboard:any):void {\n    let Width  = Billboard.data.width\n    let Height = Billboard.data.height\n\n    if ((Width === 0) && (Height === 0)) { Height = 1 }\n\n    if ((Width === 0) || (Height === 0)) {\n      let Texture = Billboard.Texture\n      if (\n        (Texture != null) && (Texture.image != null) &&\n        Texture.image.complete &&\n        (Texture.image.naturalWidth !== 0) && (Texture.image.naturalHeight !== 0)\n      ) {\n        let AspectRatio = Texture.image.naturalWidth / Texture.image.naturalHeight\n        if (Width === 0) {\n          Width = Height * AspectRatio\n        } else {\n          Height = Width / AspectRatio\n        }\n      }\n    }\n\n    Billboard.Mesh.scale.set(Width,Height,1)\n    Billboard.Mesh.position.set(0,Height/2,0) // affected by scale!\n  }\n\n"],"names":["updateSizeOf","Billboard","Width","data","width","Height","height","Texture","image","complete","naturalWidth","naturalHeight","AspectRatio","Mesh","scale","set","position","AFRAME","components","registerComponent","dependencies","schema","map","type","init","this","undefined","Material","THREE","MeshBasicMaterial","transparent","alphaTest","PlaneGeometry","Group","add","el","setObject3D","Origin","Vector3","Target","update","oldData","_this","dispose","newMap","TextureLoader","load","Image","src","needsUpdate","tick","sceneEl","getObject3D","getWorldPosition","setY","y","lookAt","remove","removeObject3D"],"mappings":"yBAmFE,SAASA,EAAcC,GACrB,IAAIC,EAASD,EAAUE,KAAKC,MACxBC,EAASJ,EAAUE,KAAKG,OAI5B,GAFe,IAAVJ,GAA4B,IAAXG,IAAiBA,EAAS,GAEjC,IAAVH,GAA4B,IAAXG,EAAe,CACnC,IAAIE,EAAUN,EAAUM,QACxB,GACc,MAAXA,GAAsC,MAAjBA,EAAQC,OAC9BD,EAAQC,MAAMC,UACkB,IAA/BF,EAAQC,MAAME,cAAwD,IAAhCH,EAAQC,MAAMG,cACrD,CACA,IAAIC,EAAcL,EAAQC,MAAME,aAAeH,EAAQC,MAAMG,cAC/C,IAAVT,EACFA,EAAQG,EAASO,EAEjBP,EAASH,EAAQU,CAEpB,CACF,CAEDX,EAAUY,KAAKC,MAAMC,IAAIb,EAAMG,EAAO,GACtCJ,EAAUY,KAAKG,SAASD,IAAI,EAAEV,EAAO,EAAE,EACzC,QAvGOY,OAAOC,WAAsB,UAEpCD,OAAOE,kBAAkB,YAAa,CACpCC,aAAc,CAAC,UACfC,OAAQ,CACNC,IAAS,CAAEC,KAAK,OAChBnB,MAAS,CAAEmB,KAAK,UAChBjB,OAAS,CAAEiB,KAAK,WAKlBC,KAAM,WACJC,KAAKlB,aAAWmB,EAChBD,KAAKE,SAAW,IAAIC,MAAMC,kBAAkB,CAC1CC,aAAY,EAAMC,UAAU,KAE9BN,KAAKZ,KAAQ,IAAIe,MAAMf,KAAK,IAAIe,MAAMI,cAAc,EAAE,GAAGP,KAAKE,UAC9DF,KAAKQ,MAAQ,IAAIL,MAAMK,MACrBR,KAAKQ,MAAMC,IAAIT,KAAKZ,MACtBY,KAAKU,GAAGC,YAAY,OAAOX,KAAKQ,OAEhCR,KAAKY,OAAS,IAAIT,MAAMU,QACxBb,KAAKc,OAAS,IAAIX,MAAMU,OACzB,EAIDE,OAAQ,SAAUC,GAAV,IA0BPC,EAAAjB,KAzBC,GACc,MAAXgB,GAAoC,MAAfA,EAAQnB,KAC7BmB,EAAQnB,MAAQG,KAAKtB,KAAKmB,IAC3B,CACoB,MAAhBG,KAAKlB,SAAmBkB,KAAKlB,QAAQoC,UAEzC,IAAIC,EAASnB,KAAKtB,KAAKmB,IACvBG,KAAKlB,SAAU,IAAIqB,MAAMiB,eAAgBC,KACvCF,aAAkBG,MAAQH,EAAOI,IAAMJ,GACvC,SAACrC,GACCmC,EAAKf,SAASL,IAAcf,EAC5BmC,EAAKf,SAASsB,aAAc,EAE5BjD,EAAa0C,EACf,GAEH,CAGa,MAAXD,GACAA,EAAQrC,QAAWqB,KAAKtB,KAAKC,OAC7BqC,EAAQnC,SAAWmB,KAAKtB,KAAKG,QAE9BN,EAAayB,KAEhB,EAIDyB,KAAM,WACSzB,KAAKU,GAAGgB,QAAQC,YAAY,UAClCC,iBAAiB5B,KAAKc,QAE7Bd,KAAKQ,MAAMoB,iBAAiB5B,KAAKY,QACjCZ,KAAKc,OAAOe,KAAK7B,KAAKY,OAAOkB,GAE7B9B,KAAKQ,MAAMuB,OAAO/B,KAAKc,OACxB,EAIDkB,OAAQ,WACe,MAAjBhC,KAAKZ,MAAoBY,KAAKU,GAAGuB,eAAe,QAC/B,MAAjBjC,KAAKlB,SAAoBkB,KAAKlB,QAAQoC,UACrB,MAAjBlB,KAAKE,UAAoBF,KAAKE,SAASgB,SAC5C"}